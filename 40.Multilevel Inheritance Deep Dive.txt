40.Multilevel Inheritance Deep Dive with Code Example in C++ 

Multilevel Inheritance in C++
Multilevel inheritance is a type of inheritance in which one derived class is inherited from another derived class. For example, we have three classes “animal”, “mammal” and “cow”. If the “mammal” class is inherited from the “animal” class and “cow” class is inherited from “mammal” which means that the “mammal” class can now implement the functionalities of “animal” and “cow” class can now implement the functionalities of “mammal” class.



Code Snippet 1: Student Class

As shown in a code snippet 1,

1st we created a “student” class which consists of protected data member integer “roll_number”.
2nd the “student” class consists of a public function “set_roll_number” and “get_roll_number”
3rd the function “set_roll_number” will set the value of the data member “roll_number”.
4th the function “get_roll_number” will print the value of the data member “roll_number”.

Code Snippet 2: Exam Class

As shown in Code snippet 2,

1st we created an “exam” class that is inheriting “student” class in public mode.
2nd the “exam” class consists of protected data members float “math” and float “physics”.
3rd the “exam” class consists of public member functions “set_marks” and “get_marks”.
4th the function “set_marks” will set the value of the data members “math” and “physics”.
5th the function “get_marks” will print the value of the data members “math” and “physics”.


Code Snippet 3: Result Class

As shown in a code snippet 3,

1st we created a “Result” class which is inheriting the “Exam” class in public mode.
2nd the “Result” class consists of private data member’s float “percentage”.
3rd the “exam” class consists of the public member function “display_results”.
4th the function “display_results” will call the “get_roll_number” and “get_marks” functions, and add the values of “math” and “physics” variables then divide that value with “2” to get a percentage and prints it.
